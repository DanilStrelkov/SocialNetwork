services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_DB: skillbox
      POSTGRES_USER: skillbox
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: on-failure:5

  frontend:
    container_name: frontend
    image: dimok82/zeone
    ports:
      - "80:80"
    restart: on-failure:5

  backend:
    container_name: backend
    image: eclipse-temurin:19-jdk-jammy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/skillbox?stringtype=unspecified
      SPRING_DATASOURCE_USERNAME: skillbox
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_PROFILES_ACTIVE: prod
    ports:
      -  "8086:8086"
    volumes:
      - ./jars:/app
    working_dir: /app
    command: java -jar backend.jar
    depends_on:
      - postgres
    networks:
      - postgres
    restart: on-failure:5

  support:
    container_name: support
    image: vladimirpanfilov/support
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/skillbox?stringtype=unspecified
      SPRING_DATASOURCE_USERNAME: skillbox
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      -  "8083:8083"
    networks:
      - postgres
    depends_on:
      - backend
    restart: on-failure:5

  grafana:
    container_name: grafana
    image: grafana/grafana
    build: './config/grafana'
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      monitoring:
        aliases:
          - grafana
    depends_on:
      - prometheus
    restart: on-failure:5

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    networks:
      monitoring:
        aliases:
          - prometheus
    restart: on-failure:5
  sonarqube:
    container_name: sonarqube
    image: sonarqube
    ports:
      - "9000:9000"
    networks:
      - postgres
    depends_on:
      - postgres
    restart: on-failure:5

networks:
  postgres:
  monitoring:

volumes:
  postgres:
