variables:
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository   # place storage for cache

image: maven:3.8.7-amazoncorretto-19

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - package
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - prod

  script:
    - echo "Compiling the code $CI_JOB_STAGE... $DEV_USER"
    - "mvn compile"

  cache:
    paths:
      - .m2/repository
      - target

test-job:       # This job runs in the test stage, which runs second.
  stage: test
  tags:
    - prod

  script:
    - echo "Maven test started"
    - "mvn test -Dmaven.test.skip"

  cache:
    paths:
      - .m2/repository
      - target

package-job:       # This job runs in the package stage, which runs third.
  stage: package
  tags:
    - prod

  script:
    - echo "Maven packaging started"
    - "mvn package -Dmaven.test.skip"

  artifacts:
    paths:
      - target/*.jar
  cache:
    policy: pull
    paths:
      - .m2/repository
      - target


deploy-job:       # This job runs in the deploy stage, which runs fourth.
  stage: deploy
  tags:
    - prod

  script:
    - echo "Maven deploy started"

deploy_dev_server:
  stage: deploy

  before_script:
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEV_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $DEV_USER@$DEV_HOST "[ ! -f $DEV_APP_PATH/app_name.jar ] || mv $DEV_APP_PATH/app_name.jar $DEV_APP_PATH/app_name-build-$CI_PIPELINE_ID.jar"
    - scp target/app_name.jar $DEV_USER@$DEV_HOST:$DEV_APP_PATH/
    - ssh $DEV_USER@$DEV_HOST "sudo systemctl stop app_name_service && sudo systemctl start app_name_service"